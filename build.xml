<!-- 
/* ==========================================
 * JGraphT : a free Java graph-theory library
 * ==========================================
 *
 * Project Info:  http://jgrapht.sourceforge.net/
 * Project Lead:  Barak Naveh (barak_naveh@users.sourceforge.net)
 *
 * (C) Copyright 2003, by Barak Naveh and Contributors.
 *
 * This library is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
 */
/* ~~~~~~~~~
 * build.xml
 * ~~~~~~~~~
 * (C) Copyright 2003, by Barak Naveh and Contributors.
 *
 * Original Author:  Barak Naveh
 * Contributor(s):   John V. Sichi
 *
 * $Id$
 *
 * Changes
 * ~~~~~~~
 * 24-Jul-2003 : Initial revision (BN);
 * 15-Aug-2003 : Used wildcards instead of enumerating files(JVS);
 * 15-Aug-2003 : Added checkstyle task (JVS);
 *
 */
-->

<!--
/**
 * An ANT build file for JGraphT (use Ant 1.5.1 and above).
 * Before running this script, make sure that the libraries used by JGraphT are
 * found under ./lib directory. This script will create directories ./build 
 * and ./testbuild for generated classfiles. These can be removed at any time 
 * via the 'clean' target.  A temporary ./distribution directory is created 
 * when building a distribution. A ./javadoc directory is created for the 
 * Javadoc HTML pages. 
 *
 * This script is based on a nice script originally written by David Gilbert.
 *
 * @author Barak Naveh
 * @author John V. Sichi
 *
 * @since 24-Jul-2003
 */
-->

<project name="jgrapht" default="all" basedir=".">

    <!-- Initialization. -->
    <target name="init" description="Initializes required settings.">
        <tstamp />
        <echo>JAVA_HOME=${java.home}</echo>
        <property name="jgrapht.name"    value="jgrapht" />
        <property name="jgrapht.version" value="0.5.0" />
        <property name="builddir"        value="${basedir}/build" />
        <property name="testbuilddir"    value="${basedir}/testbuild" />
        <property name="junit.jar"       value="${basedir}/lib/junit.jar"/>
        <property name="jgraph.jar"      value="${basedir}/lib/jgraph.jar"/>
        <property name="ant.buildfile"   value="${basedir}/build.xml"/>
        <property name="distribution"    value="${basedir}/distribution"/>

        <!-- Classpath for building functional sources. -->
        <path id="build.classpath">
            <pathelement location="${junit.jar}"/>
            <pathelement location="${jgraph.jar}"/>
        </path>
        <property name="build.classpath" refid="build.classpath"/>

        <!-- Classpath for building tests. -->
        <path id="testbuild.classpath">
            <pathelement path="${build.classpath}"/>
            <pathelement location="${builddir}"/>
        </path>
        <property name="testbuild.classpath" refid="testbuild.classpath"/>

        <!-- Classpath for running tests. -->
        <path id="test.classpath">
            <pathelement path="${testbuild.classpath}"/>
            <pathelement location="${testbuilddir}"/>
        </path>
    </target>


    <!-- Compile the JGraphT classes -->
    <target name="compile" depends="init"
            description="Compiles the JGraphT source code.">

        <!-- create a build directory -->
        <mkdir dir="${builddir}" />

        <!-- compile the source -->
        <javac srcdir="${basedir}/src" destdir="${builddir}" target="1.3">
            <classpath refid="build.classpath" />
            <include name="**/*.java"/>
            <exclude name="org/_3pq/experimental/**/*.java"/>
        </javac>
    </target>


    <!-- Generate the JGraphT runtime jar -->
    <target name="jar" depends="compile" 
                           description="Creates the runtime jar.">
        <jar jarfile="${basedir}/${jgrapht.name}-${jgrapht.version}.jar"
             basedir="${builddir}" />
    </target>


    <!-- Run all JUnit tests -->
    <target name="test" depends="compile"
                           description="Builds and runs all JUnit tests.">
        <!-- create a test build directory -->
        <mkdir dir="${testbuilddir}" />

        <javac srcdir="${basedir}/testsrc" destdir="${testbuilddir}">
            <classpath refid="testbuild.classpath" />
            <include name="org/_3pq/jgrapht/**"/>
        </javac>
        <junit printsummary="no" fork="yes" 
                           haltonerror="true" haltonfailure="true">
            <classpath refid="test.classpath"/>
            <formatter type="brief" usefile="no" />
            <batchtest>
                <fileset dir="${basedir}/testsrc">
                    <include name="**/*Test.java"/>
                    <exclude name="**/Abstract*Test.java"/>
                    <exclude name="**/Default*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- Run checkstyle on source code -->
    <!-- TODO:  once code is all clean, use as a dependency for "all" task -->
    <target name="checkstyle" depends="init"
                           description="Runs checkstyle on all source code.">
        <taskdef resource="checkstyletask.properties"
        		 classpath="${basedir}/lib/checkstyle-all-3.1.jar"/>
        <checkstyle config="${basedir}/etc/checkstyle-settings.xml">
            <fileset dir="${basedir}">
                <include name="src/**/*.java"/>
                <include name="testsrc/**/*.java"/>
            </fileset>
        </checkstyle>
    </target>

    <!-- Generate the JGraphT JavaDoc HTML pages -->
    <target name="javadoc" depends="init" 
                           description="Creates the Javadocs.">
        <delete dir="${basedir}/javadoc" />
        <mkdir dir="${basedir}/javadoc" />
        <javadoc destdir="${basedir}/javadoc" 
        		 access="protected" 
                 windowtitle="JGraphT : a free Java graph-theory library"
                 overview="${basedir}/src/overview.html">
            <classpath refid="build.classpath" />
            
            <packageset dir="${basedir}/src" defaultexcludes="yes">
                <include name="**"/>
	            <exclude name="org/_3pq/jgrapht/experimental/**"/>
            </packageset>
        </javadoc>
    </target>


    <!-- Make .zip distribution for JGraphT -->
    <target name="zip" depends="jar"
    				   description="Creates a .zip distribution.">

        <!-- make a temporary distribution directory -->
        <mkdir dir="${distribution}" />

        <!-- add README -->
        <copy file="${basedir}/README.html" tofile="${distribution}/README.html" />

        <!-- add license -->
        <copy file="${basedir}/license-LGPL.txt" tofile="${distribution}/license-LGPL.txt" />

        <!-- add runtime jar file -->
        <copy file="${basedir}/${jgrapht.name}-${jgrapht.version}.jar" tofile="${distribution}/${jgrapht.name}-${jgrapht.version}.jar" />
    
        <!-- add source files -->
        <copy todir="${distribution}/src">
            <fileset dir="${basedir}/src">
                <include name="overview.html"/>
                <include name="**/*.java"/>
                <include name="**/package.html"/>
	            <exclude name="org/_3pq/jgrapht/experimental/**"/>
            </fileset>
        </copy>

        <!-- add source files of unit tests -->
        <copy todir="${distribution}/testsrc">
            <fileset dir="${basedir}/testsrc">
                <include name="**"/>
            </fileset>
        </copy>

        <!-- add lib files -->
        <copy todir="${distribution}/lib">
            <fileset dir="${basedir}/lib">
                <include name="junit.jar"/>
                <include name="jgraph.jar"/>
                <include name="lib-readme.txt"/>
            </fileset>
        </copy>

        <!-- add ant build file (this file) -->
        <copy file="${ant.buildfile}" tofile="${distribution}/build.xml" />

        <!-- add etc files -->
        <copy todir="${distribution}/etc">
            <fileset dir="${basedir}/etc">
                <include name="checkstyle-settings.xml"/>
                <include name="etc-readme.txt"/>
                <include name="jalopy-settings.xml"/>
            </fileset>
        </copy>

        <!-- add Javadoc files -->
        <copy todir="${distribution}/javadoc">
            <fileset dir="${basedir}/javadoc"/>
        </copy>
        
        <!-- convert end-of-line characters in text files -->
        <fixcrlf srcdir="${distribution}/src"     eol="crlf" eof="remove" />
        <fixcrlf srcdir="${distribution}/testsrc" eol="crlf" eof="remove" />
        <fixcrlf srcdir="${distribution}/etc"     eol="crlf" eof="remove" />

        <!-- make the zip file -->
        <zip zipfile="${basedir}/${jgrapht.name}-${jgrapht.version}.zip">
             <zipfileset dir="${distribution}"
                         prefix="${jgrapht.name}-${jgrapht.version}" />
        </zip>

        <!-- delete the temporary distribution directory -->
        <delete dir="${basedir}/distribution" />

    </target>


    <!-- Make .tar.gz distribution for JGraphT -->
    <target name="targz" depends="jar"
                         description="Creates a tar.gz distribution.">

        <!-- make a temporary distribution directory -->
        <mkdir dir="${distribution}" />

        <!-- add README -->
        <copy file="${basedir}/README.html" tofile="${distribution}/README.html" />

        <!-- add license -->
        <copy file="${basedir}/license-LGPL.txt" tofile="${distribution}/license-LGPL.txt" />

        <!-- add runtime jar file -->
        <copy file="${basedir}/${jgrapht.name}-${jgrapht.version}.jar" tofile="${distribution}/${jgrapht.name}-${jgrapht.version}.jar" />
    
        <!-- add source files -->
        <copy todir="${distribution}/src">
            <fileset dir="${basedir}/src">
                <include name="overview.html"/>
                <include name="**/*.java"/>
                <include name="**/package.html"/>
	            <exclude name="org/_3pq/jgrapht/experimental/**"/>
            </fileset>
        </copy>

        <!-- add source files of unit tests -->
        <copy todir="${distribution}/testsrc">
            <fileset dir="${basedir}/testsrc">
                <include name="**"/>
            </fileset>
        </copy>

        <!-- add lib files -->
        <copy todir="${distribution}/lib">
            <fileset dir="${basedir}/lib">
                <include name="junit.jar"/>
                <include name="jgraph.jar"/>
                <include name="lib-readme.txt"/>
            </fileset>
        </copy>

        <!-- add ant build file (this file) -->
        <copy file="${ant.buildfile}" tofile="${distribution}/build.xml" />

        <!-- add etc files -->
        <copy todir="${distribution}/etc">
            <fileset dir="${basedir}/etc">
                <include name="checkstyle-settings.xml"/>
                <include name="etc-readme.txt"/>
                <include name="jalopy-settings.xml"/>
            </fileset>
        </copy>

        <!-- add Javadoc files -->
        <copy todir="${distribution}/javadoc">
            <fileset dir="${basedir}/javadoc"/>
        </copy>
        
        <!-- convert end-of-line characters in text files -->
        <fixcrlf srcdir="${distribution}/src"     eol="lf" eof="remove" />
        <fixcrlf srcdir="${distribution}/testsrc" eol="lf" eof="remove" />
        <fixcrlf srcdir="${distribution}/etc"     eol="lf" eof="remove" />

        <!-- make the tar.gz file -->
        <tar tarfile="${basedir}/${jgrapht.name}-${jgrapht.version}.tar">
             <tarfileset dir="${distribution}"
                         prefix="${jgrapht.name}-${jgrapht.version}" />
        </tar>
        <gzip zipfile="${basedir}/${jgrapht.name}-${jgrapht.version}.tar.gz"   
              src="${basedir}/${jgrapht.name}-${jgrapht.version}.tar" />
        <delete file="${basedir}/${jgrapht.name}-${jgrapht.version}.tar" />

        <!-- delete the temporary distribution directory -->
        <delete dir="${distribution}" />

    </target>
    

	<!-- Clean outputs from previous build -->    
	<target name="clean"
			depends="init"
			description="Cleans all outputs from previous builds">
        <delete dir="${distribution}" />
        <delete dir="${builddir}" />
        <delete dir="${testbuilddir}" />
        <delete dir="${basedir}/javadoc" />
        <delete file="${basedir}/${jgrapht.name}-${jgrapht.version}.jar" />
        <delete file="${basedir}/${jgrapht.name}-${jgrapht.version}.zip" />
        <delete file="${basedir}/${jgrapht.name}-${jgrapht.version}.tar.gz" />
	</target>


	<!-- Clean unnecessary outputs from this build -->    
	<target name="postclean"
			depends="init"
			description="Cleans unnecessary outputs from this build">
        <delete dir="${basedir}/javadoc" />
        <delete file="${basedir}/${jgrapht.name}-${jgrapht.version}.jar" />
	</target>


    <!-- ALL -->
    <target name="all" 
            depends="clean,compile,test,javadoc,zip,targz,postclean"
            description="Cleans, compiles and tests JGraphT, builds the jar, generates Javadocs and creates distribution files (.zip and .tar.gz).">
    </target>

</project>
